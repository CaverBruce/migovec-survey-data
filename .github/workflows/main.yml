name: Automated Build

on:
  push:
    branches:
      - master
    paths:
      - data/**
      - .github/workflows/**
  workflow_dispatch:

env:
  THERION_VERSION: 5.5.6
  THERION_PATH: ./therion-5.5.6

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Therion
        id: cache-therion
        uses: actions/cache@v1
        with:
          path: ${{ env.THERION_PATH }}/bin
          key: ${{ runner.os }}-${{ env.THERION_VERSION }}
      #========================= INSTALL DEPENDENCIES ========================#
      - name: Run apt update
        run: sudo apt update
      - name: Install Therion compilation dependencies
        if: steps.cache-therion.outputs.cache-hit != 'true'
        run: sudo apt install -y bwidget lcdf-typetools libtk-img-dev libtk-img libvtk6-dev libvtk6.3 libwxgtk3.0-dev tcl-dev survex texlive-latex-base # Pre-installed: gcc ghostscript imagemagick libfreetype6-dev libjpeg-dev libpng-dev zlib1g zlib1g-dev
      - name: Install Therion runtime dependencies
        run: sudo apt install -y libproj-dev texlive-metapost
      - name: Download and unpack Therion
        if: steps.cache-therion.outputs.cache-hit != 'true'
        run: |
          curl https://github.com/therion/therion/archive/v${THERION_VERSION}.tar.gz -L -O
          tar xvzf v${THERION_VERSION}.tar.gz
      - name: Build Therion
        if: steps.cache-therion.outputs.cache-hit != 'true'
        run: |
          make -C $THERION_PATH
          mkdir ${THERION_PATH}/bin
          mv ${THERION_PATH}/therion ${THERION_PATH}/bin/therion
      - name: Install svgo
        run: sudo npm install -g svgo
      #=========================== GENERATE OUTPUT ===========================#
      - name: Generate output files
        run: find data/_config/automation -type f -name "*.thconfig" -exec echo -e "\n\nGenerating {}" \;  -exec ${THERION_PATH}/bin/therion -q {} \;
      #=========================== COMPRESS OUTPUT ===========================#
      - name: Compress PDFs
        run: |
          for file in ./data/_outputs/*.pdf; do
            gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dQUIET -dBATCH -sOutputFile=temp.pdf $file;                                    
            mv temp.pdf $file;
          done
      - name: Compress SVGs
        run: svgo -f ./data/_outputs/
      #=========================== CREATE LISTING ===========================#
      - name: Generate listing
        run: python3 ./scripts/create_file_listing.py ./data/_outputs/ ./data/_outputs/listing.json
      #=============================== UPLOADS ===============================#
      - name: Upload Files
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: Build ${{ github.run_number }}
          automatic_release_tag: "latest"
          prerelease: false
          files: |
            ./data/_outputs/listing.json
            ./data/_outputs/*.3d
            ./data/_outputs/*.lox
            ./data/_outputs/*.pdf
            ./data/_outputs/*.svg
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Therion
        id: cache-therion
        uses: actions/cache@v1
        with:
          path: ${{ env.THERION_PATH }}/bin
          key: ${{ runner.os }}-${{ env.THERION_VERSION }}
      #========================= INSTALL DEPENDENCIES ========================#
      - name: Run apt update
        run: sudo apt update
      - name: Install Therion compilation dependencies
        if: steps.cache-therion.outputs.cache-hit != 'true'
        run: sudo apt install -y bwidget lcdf-typetools libtk-img-dev libtk-img libvtk6-dev libvtk6.3 libwxgtk3.0-dev tcl-dev survex texlive-latex-base # Pre-installed: gcc ghostscript imagemagick libfreetype6-dev libjpeg-dev libpng-dev zlib1g zlib1g-dev
      - name: Install Therion runtime dependencies
        run: sudo apt install -y libproj-dev texlive-metapost
      - name: Download and unpack Therion
        if: steps.cache-therion.outputs.cache-hit != 'true'
        run: |
          curl https://github.com/therion/therion/archive/v${THERION_VERSION}.tar.gz -L -O
          tar xvzf v${THERION_VERSION}.tar.gz
      - name: Build Therion
        if: steps.cache-therion.outputs.cache-hit != 'true'
        run: |
          make -C $THERION_PATH
          mkdir ${THERION_PATH}/bin
          mv ${THERION_PATH}/therion ${THERION_PATH}/bin/therion
      #=========================== GENERATE OUTPUT ===========================#
      - name: Generate coverage
        run: python3 ./scripts/percentage_drawn.py data/system_migovec.th --json ./data/_outputs/coverage.json
      #=============================== UPLOADS ===============================#
      - name: Upload Files
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: Coverage ${{ github.run_number }}
          automatic_release_tag: "coverage"
          prerelease: false
          files: |
            ./data/_outputs/coverage.json
