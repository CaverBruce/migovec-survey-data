layout custom_points
	
	code metapost 
		
		## redefinitions of existing labels
	   	
	    def p_waterflow_permanent_MY (expr P,R,S,A)=
	    U:=(.2u,.2u);
	      T:=identity aligned A rotated R scaled S shifted P;
	      pickup PenD;
	      thdraw (-.07u,.28u)--(.07u,.28u)--(0,0.43u)--cycle;
	    thfill (-.07u,.28u)--(.07u,.28u)--(0,0.43u)--cycle;      
	    thdraw (-0.04u,0.29u)..(.04u,.2u)..(-0.05u,0.1u)..(.05u,0)..(-0.05u,-0.1u)..(0,-0.2u);
	    enddef;

	    def p_station_fixed_MY (expr pos)=
	    T:=identity shifted pos;
	    pickup PenD;
	    pair z;
	    z:=(0,.7u);
	    thclean (-.05u,-.05u)..(-.05u,.05u)..(.05u,.05u)..(.05u,-.05u)..cycle;
	    thfill (-.05u,-.05u)..(-.05u,.05u)..(.05u,.05u)..(.05u,-.05u)..cycle withcolor(0.7,0,0);
		enddef;

	  	def p_station_temporary_MY (expr pos)=
	    	T:=identity shifted pos;
	    	pickup PenD;
	    	pair z;
	    	z:=(0,.7u);
	    	thclean (-.05u,-.05u)..(-.05u,.05u)..(.05u,.05u)..(.05u,-.05u)..cycle;
	    	thdraw (-.05u,-.05u)..(-.05u,.05u)..(.05u,.05u)..(.05u,-.05u)..cycle withcolor(0.7,0,0);
		enddef;
	    
	    def p_airdraught_MY (expr P,R,S,A)=
	      U:=(.2u,.2u);
	      T:=identity aligned A rotated R scaled S shifted P;
	      pickup PenD;
	      thfill (-.12u,.08u)--(0,.12u)--(.12u,.08u)--(0,.3u)--cycle;
	      thdraw (-.1u,-.35u)--(0,-.28u)--(.1u,-0.35u);
	      thdraw (-.1u,-.25u)--(0,-.18u)--(.1u,-.25u);
	      thdraw (0,-.28u)--(0,0.15u);
	    enddef;
	    
	    def p_gradient_MY (expr P,R,S,A)=
	      U:=(.2u,.2u);
	      T:=identity aligned A rotated R scaled S shifted P;
	      pickup PenD;
	      thfill (-.12u,.08u)--(0,.12u)--(.12u,.08u)--(0,.3u)--cycle;
	      thfill (-.12u,.08u)--(0,.12u)--(.12u,.08u)--(.12u,-.28u)--(-.12u,-.28u)--cycle withcolor(1,1,1);
	      thdraw (0,-.28u)--(0,0.15u);
	    enddef;
	 
	    def p_pillar_MY (expr P,R,S,A)=
	      U:=(.2u,.2u);
	      T:=identity aligned A rotated R scaled S shifted P;
	      pickup PenC;
	      thdraw (-.2u,-.2u)..(-.2u,.2u)..(.2u,.2u)..(.2u,-.2u)..cycle withcolor(1,0.5,0.1);
	      thfill (-.1u,-.1u)..(-.1u,.1u)..(.1u,.1u)..(.1u,-.1u)..cycle withcolor(1,0.5,0.1);
	    enddef;

	    def p_stalagmite_MY (expr P,R,S,A)=
	      U:=(.2u,.2u);
	      T:=identity aligned A rotated R scaled S shifted P;
	      pickup PenC;
	      thfill (-.1u,-.1u)..(-.1u,.1u)..(.1u,.1u)..(.1u,-.1u)..cycle withcolor(1,0.5,0.1);
	    enddef;

	    def p_stalactite_MY (expr P,R,S,A)=
	      U:=(.2u,.2u);
	      T:=identity aligned A rotated R scaled S shifted P;
	      pickup PenC;
	      thdraw (-.1u,-.1u)..(-.1u,.1u)..(.1u,.1u)..(.1u,-.1u)..cycle withcolor(1,0.5,0.1);
	    enddef;

	    # initialise the symbols here
	    initsymbol("p_waterflow_permanent_MY");
    	initsymbol("p_station_fixed_MY");
    	initsymbol("p_station_temporary_MY");
    	initsymbol("p_airdraught_MY");
    	initsymbol("p_gradient_MY");
    	initsymbol("p_pillar_MY");
    	initsymbol("p_stalagmite_MY");
    	initsymbol("p_stalactite_MY");
    	
  
	    ## new definitions

	    # a blue arrow for gradient on ice
	    def p_u_gradice_MY (expr P,R,S,A)=
	       U:=(.2u,.2u);
	       T:=identity aligned A rotated R scaled S shifted P;
	       pickup PenD;
	       thfill (-.12u,.08u)--(0,.12u)--(.12u,.08u)--(0,.3u)--cycle withcolor (0,0.7,0.9);
	       thfill (-.12u,.08u)--(0,.12u)--(.12u,.08u)--(.12u,-.28u)--(-.12u,-.28u)--cycle withcolor (1,1,1);
	       thdraw (0,-.28u)--(0,0.15u) withcolor (0,0.7,0.9);
	     enddef;

	    # a sample point
	    def p_u_sampled_MY (expr P,R,S,A)=
	      U:=(.2u,.2u);
	      T:=identity aligned A rotated R scaled S shifted P;
	      thdraw (-.2u,-.2u)..(-.2u,.2u)..(.2u,.2u)..(.2u,-.2u)..cycle withcolor(1,0.1,0.6);
	      thfill (-.1u,-.1u)..(-.1u,.1u)..(.1u,.1u)..(.1u,-.1u)..cycle withcolor(1,0.1,0.6);
	    enddef;

	    # black square wih second outline for loggers
	    def p_u_logger_MY (expr P,R,S,A)=
	      U:=(.2u,.2u);
	      T:=identity aligned A rotated R scaled S shifted P;
	      thdraw (-.3u,-.3u)--(-.3u,.3u)--(.3u,.3u)..(.3u,-.3u)--cycle;
	      thfill (-.2u,-.2u)--(-.2u,.2u)--(.2u,.2u)..(.2u,-.2u)--cycle;
	    enddef;
	    
	    # a straight blue arrow for drips 
	    def p_u_waterdrip_MY (expr P,R,S,A)=
	      U:=(.2u,.2u);
	      T:=identity aligned A rotated R scaled S shifted P;
	      pickup PenD;
	      
	      thdraw (0u,0u)--(0,.15u) withcolor(0,0.1,0.7);
	      thdraw (0,.3u)--(0,.45u) withcolor(0,0.1,0.7);
	      thdraw (0,-.15u)--(0,-.3u) withcolor(0,0.1,0.7);
	      thfill (-.18u,-.15u)--(0,-.45u)--(.18u,-.15u)--(0,-.22u)--cycle withcolor(0,0.1,0.7);
	    enddef;

	    # green grass
	    def p_u_grass_MY (expr P,R,S,A)=
	      U:=(.2u,.2u);
	      T:=identity aligned A rotated R scaled S shifted P;
	      pickup PenC;
	      thdraw (0.15u,0.1u)--(0,-0.2u)--(0,0.25u) withcolor (0.3,0.7,0.25);
	      thdraw (0.13u,-0.2u)--(0,-0.2u)--(-0.17u,0.18u) withcolor (0.3,0.7,0.25);
	    enddef;

	    # initialise the symbols here

	    initsymbol("p_u_gradice_MY");
	    initsymbol("p_u_sampled_MY");
	    initsymbol("p_u_logger_MY");
	    initsymbol("p_u_waterdrip_MY");
	    initsymbol("p_u_grass_MY");

	endcode
	
endlayout

## add legend names for each new symbol definition

text en "point u:gradice_MY"  "ice gradient"
text en "point u:sampled_MY"  "sampled"
text en "point u:logger_MY"  "logger"
text en "point u:waterdrip_MY" "water drips"
text en "point u:grass_MY" "grass"
